[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multimodal-rag-pdf-processing"
version = "1.0.0"
description = "Multimodal RAG system for PDF document parsing and element extraction"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Multimodal RAG Team"}
]
keywords = ["pdf", "rag", "multimodal", "document-processing", "ocr"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Markup",
]

dependencies = [
    # Core LangChain components
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.1",
    "langchain-unstructured>=0.1.0",
    
    # PDF processing libraries
    "unstructured>=0.10.0",
    "pypdf>=3.0.0",
    
    # OCR dependencies (Tesseract OCR required per project specs)
    "pytesseract>=0.3.10",
    "paddlepaddle>=2.5.0",
    "paddleocr>=2.7.0",
    
    # Image processing
    "pillow>=9.0.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    
    # Data processing
    "pandas>=1.5.0",
    
    # Utilities
    "reportlab>=3.6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]

advanced = [
    "unstructured[local-inference]>=0.10.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
]

[project.urls]
Homepage = "https://github.com/Sogrey/RAG-PDF2markdown"
Repository = "https://github.com/Sogrey/RAG-PDF2markdown.git"
Issues = "https://github.com/Sogrey/RAG-PDF2markdown/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yml", "*.yaml", "*.json", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]